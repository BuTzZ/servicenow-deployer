<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_snc_deployer.ExecuteDeploymentTask</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Executes the given task.&#13;
If the task is "automatic" the function will trigger the automatic execution.&#13;
If the task is manual, it does nothing.</description>
        <name>ExecuteDeploymentTask</name>
        <script><![CDATA[function ExecuteDeploymentTask(grTask)
{
	var IsValidRecord = x_snc_devtools.IsValidRecord;
	var IsValidSysId = x_snc_devtools.IsValidSysId;
	var Sleep = x_snc_devtools.Sleep;
	var GetValue = x_snc_devtools.GetValue;
	var GetIntegerValue = x_snc_devtools.GetIntegerValue;

	Debug('ExecuteDeploymentTask');
	Debug(grTask);

	if (IsValidRecord(grTask) == false)
	{
		return false;
	}
	
	if (grTask.state != GetDeploymentTaskState('inprogress'))
	{
		return false;
	}
	
	if (grTask.execution == 'manual')
	{
		Debug('manual');
		return ValidateDeploymentTask(grTask);
	}
	else if (grTask.execution == 'automatic')
	{
		Debug('automatic');
		var bResult = false;
		Debug(grTask.action);
		if (grTask.action == 'run_install_scripts')
		{
			Debug('run_install_scripts');
			bResult = TargetInstanceRunInstallScripts(grTask.deployment.instance.getRefRecord(),grTask.id);
		}
		else if (grTask.action == 'run_atf_test_suite')
		{
			var vResult = TargetInstanceATFTestSuiteRun(grTask.deployment.instance.getRefRecord(),grTask.id);
			Debug('AFTER TargetInstanceATFTestSuiteRun');
			Debug(vResult);
			if (IsValidSysId(vResult) == true)
			{
				var strProgressId = vResult;
				var bRunning = true;
				while (bRunning == true)
				{
					Sleep(10);
					var vProgress = TargetInstanceATFTestSuiteCheckProgress(grTask.deployment.instance.getRefRecord(),strProgressId);
					Log('AFTER TargetInstanceATFTestSuiteCheckProgress');
					Log(vProgress);
					
					var nStatus = GetIntegerValue(GetValue(vProgress,'result','status'));
					if (nStatus > 1) // not pending, not running
					{
						bRunning = false;
					}
					
				}
				
				/*
				
	["result"]:
___["error"]:
___["links"]:
______["progress"]:
_________["id"]: e81fff20db52b910f0f1d03cd39619c6
_________["url"]: https://wildvancouver.service-now.com/api/sn_cicd/progress/e81fff20db52b910f0f1d03cd39619c6
______["source"]:
_________["id"]: 501fff20db52b910f0f1d03cd39619a1
_________["url"]: https://wildvancouver.service-now.com/api/now/table/sys_atf_schedule/501fff20db52b910f0f1d03cd39619a1
___["percent_complete"]: 0
___["status"]: 1
___["status_detail"]:
___["status_label"]: Running
___["status_message"]:				
				
				*/
				
				/*var vProgress = TargetInstanceATFTestSuiteCheckProgress(grTask.deployment.instance.getRefRecord(),strProgressId);
				Log('AFTER TargetInstanceATFTestSuiteCheckProgress');
				Log(vProgress);*/
			}
			
		}	
		
		if (bResult == false)
		{
			LogError('Failed to execute deployment task: '+x_snc_devtools.RenderValue(grTask));
		}
		
		
		if (bResult == true)
		{
			bResult = ValidateDeploymentTask(grTask);
		}
		
		if (bResult == true)
		{
			grTask.state = GetDeploymentTaskState('complete');
		}
		else
		{
			grTask.state = GetDeploymentTaskState('failed');
		}
		grTask.update();
		
		return bResult;
	}
		
	return true;
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-10-31 11:18:25</sys_created_on>
        <sys_id>c354aa941b52f1106c17fdd49b4bcb93</sys_id>
        <sys_mod_count>16</sys_mod_count>
        <sys_name>ExecuteDeploymentTask</sys_name>
        <sys_package display_value="Deployer WORK IN PROGRESS" source="x_snc_deployer">394148f9db1c2d906a03dad1f396197a</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Deployer WORK IN PROGRESS">394148f9db1c2d906a03dad1f396197a</sys_scope>
        <sys_update_name>sys_script_include_c354aa941b52f1106c17fdd49b4bcb93</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-11-01 13:29:39</sys_updated_on>
    </sys_script_include>
</record_update>
