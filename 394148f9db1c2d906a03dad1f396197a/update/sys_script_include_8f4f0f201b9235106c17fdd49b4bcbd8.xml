<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_snc_deployer.TargetInstanceRequest</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Requests the given end point of the Deployer Target API on the given target instance.&#13;
The credentials used for the request are taken from the credentials associated with the target instance.</description>
        <name>TargetInstanceRequest</name>
        <script><![CDATA[function TargetInstanceRequest(grInstance,strEndPoint)
{
	var GetStringValue = x_snc_devtools.GetStringValue;
	var HttpRequest = x_snc_devtools.HttpRequest;
	var IsValidRecord = x_snc_devtools.IsValidRecord;
	var GetRecord = x_snc_devtools.GetRecord;
	var ParseJson = x_snc_devtools.ParseJson;
	var GetValue = x_snc_devtools.GetValue;
	var IsValidVersion = x_snc_devtools.IsValidVersion;
	var IsVersionCompatible = x_snc_devtools.IsVersionCompatible;
	var GetAppRecord = x_snc_devtools.GetAppRecord;

	if (IsValidRecord(grInstance) == false)
	{
		return false;
	}
	
	var grCredential = GetRecord('discovery_credentials',grInstance.credential);
	if (IsValidRecord(grCredential) == false)
	{
		return false;
	}
	
	var provider = new sn_cc.StandardCredentialsProvider();
	var credential = provider.getCredentialByID(grCredential.sys_id);
	
	var oBasicAuth = {
		username: credential.getAttribute("user_name"),
		password: credential.getAttribute("password")
		};
		
	var strUrl = '';
	strUrl += GetStringValue(grInstance.url);
	strUrl += '/api/x_snc_deployer/target/'+strEndPoint;
	
	var strResult = HttpRequest(
		{
			url: strUrl,
			basicauth: oBasicAuth
		});
	
	if (strResult == false)
	{
		return false;
	}
	
	var result = ParseJson(strResult);
	if (result == false)
	{
		return false;
	}
	
	if (GetValue(result,'result','message') != 'SUCCESS')
	{
		return false;
	}
	
	var strTargetDeployerVersion = GetValue(result,'result','deployer_version');
	if (IsValidVersion(strTargetDeployerVersion) == false)
	{
		return false;
	}
	
	var grAppDeployer = GetAppRecord('x_snc_deployer');
	var strRequiredDeployerVersion = AppGetProperty('required_target_version');
	
	if (IsVersionCompatible(strTargetDeployerVersion,strRequiredDeployerVersion) == false)
	{
		return false;
	}

		
	return true;
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-11-01 09:00:27</sys_created_on>
        <sys_id>8f4f0f201b9235106c17fdd49b4bcbd8</sys_id>
        <sys_mod_count>4</sys_mod_count>
        <sys_name>TargetInstanceRequest</sys_name>
        <sys_package display_value="Deployer WORK IN PROGRESS" source="x_snc_deployer">394148f9db1c2d906a03dad1f396197a</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Deployer WORK IN PROGRESS">394148f9db1c2d906a03dad1f396197a</sys_scope>
        <sys_update_name>sys_script_include_8f4f0f201b9235106c17fdd49b4bcbd8</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-11-01 09:05:39</sys_updated_on>
    </sys_script_include>
</record_update>
