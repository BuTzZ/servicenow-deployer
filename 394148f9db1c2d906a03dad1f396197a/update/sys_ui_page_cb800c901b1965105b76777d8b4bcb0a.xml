<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_page">
    <sys_ui_page action="INSERT_OR_UPDATE">
        <category>general</category>
        <client_script/>
        <description/>
        <direct>false</direct>
        <endpoint>x_snc_deployer_manual.do</endpoint>
        <html><![CDATA[<?xml version="1.0" encoding="utf-8" ?>
<j:jelly trim="false" xmlns:j="jelly:core" xmlns:g="glide" xmlns:j2="null" xmlns:g2="null">
<div style="padding-left: 20px;">
<span style="visibility: hidden;">_CUT_HERE_</span>
	<g2:no_escape>$[
		var docapi = new x_snc_devtools.DocumentationAPI('x_snc_deployer');
		docapi.RenderHeader();
	]</g2:no_escape>
	
	<p>Welcome to Deployer - created and maintained by&#160;<a href="mailto:sascha.wildgrube@servicenow.com">Sascha Wildgrube</a>.</p>

	<h2>Features</h2> 
	<p>The Deployer app enables fully a automated CICD pipeline based on source control. It installs applications and dependent applications, runs Instance Scan checks, installation scripts and ATF tests automatically.</p>
	<p>The Deployer app protects the target instance from unwanted or unexpected data deletion. For each target instance a data deletion policy must be specified.</p>
	<ul>
		<li><b>Deny</b>: Data deletion is not allowed as part of a deployment. If applications are selected for deployment which do not (or no longer) contain tables or columns which exist on the target instance the deployment cannot proceed.</li>
		<li><b>Confirm</b>: Data deletion is allowed but must be explicitly confirmed during the deployment.</li>
		<li><b>Warn</b>: Data deletion is allowed. Users are only warned of data deletion on the target instance.</li>
	</ul>
	
	<h3>How the (automated) deployment works</h3>
	<p>The Deployer app is a remote control that uses REST APIs exposed by the Target Instance. These REST API endpoints allow Deployer to retrieve information on the Target Instance, trigger source control operations, run Instance Scan checks and execute ATF test suites.</p>
	<p>Automated Deployment Procedure</p>
	<ol>
		<li>Determining the applications to be installed by creating a Repository Application Status. The availability of all application version branches is checked based on the dependency tree.</li>
		<li>Install applications and perform CodeSanity checks (Instance Scan) in reverse dependency order. The reverse dependency order is based on the application to be installed and all of its dependencies (and the dependencies of the dependencies). The deepest nodes of the dependency tree are installed first. The application to be installed comes last.</li>
		<li>Running installation scripts in reverse dependency order.</li>
		<li>Running all ATF tests in reverse dependency order.</li>
	</ol>

	<h3>CICD Instance features</h3>
	<p>The "CICD Instance" is an instance that is used to run and operate CICD pipeline automation tools - a control tower.</p>
	<p><a href="/x_snc_deployer_repository_credentials_list.do" target="_blank">Repository Credentials</a>&#160;need be configured so that the Deployer can access a public or internal source control system based on the repository url alone. Repository Credentials allow to map credential records with specific repository urls or just fractions of urls to cover multiple repositories.</p>
	<p>The&#160;<a href="/x_snc_deployer_repository_application_status_list.do" target="_blank">Repository App Status</a>&#160;feature can be used to analyse a given repository and check its readyness for deployment. To access the repositories, the Repository Credentials must be configured.</p>
	<p>The current state in an application's "dev" branch can also be assessed using the Repository Application Status feature to get a preview of the result for the application before actually baselining it.</p>
	<p><a href="/x_snc_deployer_instance_list.do" target="_blank">Target Instances</a>&#160;need be configured to enable deployments of applications to these instances. The exact steps performed during a deployment can be configured for each Target Instance - e.g., whether to execute the default ATF Test Suite of each installed application and whether CodeSanity checks should be performed during deployment. Each Target Instance can have a type of either DEV, TEST or PROD.</p>
	<p><a href="/x_snc_deployer_pipeline_list.do" target="_blank">Pipelines</a>&#160;can be configured to provide an overview on which applications are installed on which instance.</p>
	<p><a href="/x_snc_deployer_deployment_list.do" target="_blank">Deployments</a>&#160;represent the specific deployment of an application (and its dependencies) in a given version to a specified Target Instance.</p>
	<p>Supported automatic deployment tasks:
		<ul>
			<li>Installing new versions of imported applications on target instances ("Switch Branch")</li>
			<li>Installing new versions or refresh the current version of imported applications on target instances ("Apply Remote Changes")</li>
			<li>Running installation scripts on target instances</li>
			<li>Running CodeSanity checks on target instances (based on Instance Scan)</li>
			<li>Running the default ATF Test Suite of applications on target instances</li>
		</ul>
	</p>
	
	<p>Supported manual deployment tasks:
		<ul>
			<li>Confirm Data Deletion</li>
			<li>Importing new applications on target instances ("Import from Source Control")</li>
			<li>Pre-Deployment Activities</li>
			<li>Smoke Testing</li>
			<li>Post-Deployment Activities</li>
		</ul>
	</p>	

	<h3>Target Instance features</h3>
	<p>The "Target Instance" is an instance to which applications are to be deployed.</p>
	<p>The Deployer app exposes a REST API to check the status of the target instance and to asynchronously execute the installation scripts of an application and all of its dependencies in the correct order.</p>

	<h2>Disclaimer</h2>
	<g2:no_escape>$[docapi.RenderDisclaimer()]</g2:no_escape>	
	
	<h2>System Requirements</h2>
	<ul>
		<g2:no_escape>$[
			docapi.RenderSystemRequirements(
				'Vancouver,Washington',
				true,
				AppGetDependencies());
		]</g2:no_escape>	
	</ul>
	
	<h2>Installation on target instance</h2>
	<ol>
		<g2:no_escape>$[
			docapi.RenderInstallationInstructionsImportFromSourceControl(
				'DevTools',
				'https://github.com/saschawildgrube/servicenow-devtools',
				true,
				'https://www.wildgrube.com/servicenow-devtools/');
		]</g2:no_escape>
		<g2:no_escape>$[
			docapi.RenderInstallationInstructionsImportFromSourceControl(
				'Deployer',
				'https://github.com/saschawildgrube/servicenow-deployer');
		]</g2:no_escape>		
		<g2:no_escape>$[
			docapi.RenderInstallationInstructionsAppInstall();
		]</g2:no_escape>		
		<li>Create a technical user and assign the x_snc_deployer.api role to allow a CICD automation tool to be configured to run installation scripts on the target instance remotely.</li>
	</ol>
	
	<h2>Installation on CICD instance</h2>
	<ol>
		<g2:no_escape>$[
			docapi.RenderInstallationInstructionsImportFromSourceControl(
				'DevTools',
				'https://github.com/saschawildgrube/servicenow-devtools',
				true,
				'https://www.wildgrube.com/servicenow-devtools/');
		]</g2:no_escape>
		<g2:no_escape>$[
			docapi.RenderInstallationInstructionsImportFromSourceControl(
				'Deployer',
				'https://github.com/saschawildgrube/servicenow-deployer');
		]</g2:no_escape>		
		<g2:no_escape>$[
			docapi.RenderInstallationInstructionsAppInstall();
		]</g2:no_escape>		
		<li>Configure&#160;<a href="/x_snc_deployer_repository_credentials_list.do" target="_blank">Repository Credentials</a>&#160;to map credential records to one or more source control systems, groups or even individual repositories within these source control systems.</li>
		<li>Configure&#160;<a href="/x_snc_deployer_instance_list.do" target="_blank">Target Instances</a>&#160;to enable deployments of applications to these instances.</li>
	</ol>	
	
	<g2:no_escape>$[x_snc_devtools.HtmlRenderLinkDirectory(GetLinkDirectoryCICD())]</g2:no_escape>	
	
	<h2>Reference</h2>

	<h3>Configuration Options</h3>
	<g2:no_escape>$[docapi.RenderProperties()]</g2:no_escape>
	
	<h3>Roles</h3>
	<g2:no_escape>$[docapi.RenderRoles()]</g2:no_escape>		

	<h3>REST APIs</h3>
	<g2:no_escape>$[docapi.RenderRestApis()]</g2:no_escape>		

	<h3>Tables</h3>
	<g2:no_escape>$[docapi.RenderTables()]</g2:no_escape>	

	<h3>UI Actions</h3>
	<g2:no_escape>$[docapi.RenderUIActions()]</g2:no_escape>		

	<h3>Script Includes</h3>
	<g2:no_escape>$[docapi.RenderScriptIncludes()]</g2:no_escape>

	<h3>Dependencies</h3>
	<g2:no_escape>$[docapi.RenderDependencies()]</g2:no_escape>	

	<h3>Technical Debts</h3>
	<g2:no_escape>$[docapi.RenderTechnicalDebts()]</g2:no_escape>	

<!--	
	<h3>UI Scripts</h3>
	<g2:no_escape>$[docapi.RenderUIScripts()]</g2:no_escape>	
	
	<h3>Test step configurations</h3>
	<g2:no_escape>$[docapi.RenderTestStepConfigurations()]</g2:no_escape>
	
	<h3>Extension Points</h3>
	<g2:no_escape>$[docapi.RenderExtensionPoints()]</g2:no_escape>		

	<h3>Business Rules</h3>
	<g2:no_escape>$[docapi.RenderBusinessRules()]</g2:no_escape>	
-->
 
	<h2>License</h2>
	<g2:no_escape>$[docapi.RenderCopyright(2023,'Sascha Wildgrube')]</g2:no_escape>
	<g2:no_escape>$[docapi.RenderLicense()]</g2:no_escape>
	
	<h2>Release Notes</h2>

	<h3>1.13.0 - TODO</h3>
	<ol>
		<li>DevTools 1.98.0 is required due to MID Server support.</li>
		<li>A MID Server can now be specified for a Repository Credential.</li>
		<li>Added function GetRepositoryCredentialRecord().</li>
	</ol>


	<h3>1.12.1 - 2024-07-05</h3>
	<ol>
		<li>Packages other than Custom Applications (sys_app) were erroneously treated as apps that can be installed from a source control repository when preparing a deployment. This has been fixed. Such packages are now ignored when creating the tasks.</li> 
		<li>The in the Repository Application Status view, an error message was shown if at least one package is contained that is out of scope. This has been fixed.</li>
	</ol>


	<h3>1.12.0 - 2024-07-05</h3>
	<ol>
		<li>DevTools 1.94.0 is required due to the new functions to update the CMDB.</li>
		<li>Deployer 1.12.0 requires the same version or higher on the target instance due to the change in the x_snc_deployer.api role and the new capabilities of the "Get Status" REST API endpoint.</li>
		<li>The local CMDB is updated to reflect the installed applications on the target instance after a deployment.</li>
		<li>The local CMDB is updated to reflect the availability of installable applications after creating a Repository Application Status.</li>
		<li>Added the UI Action "Update Local CMDB" on the Target Instance form.</li>
		<li>The x_snc_deployer.api role now also contains the security_admin role - The admin and security_admin roles are required since the execution of ATF tests depends on the roles of the user triggering their execution.</li>
		<li>The "Get Status" REST API endpoint now also provides the list of dependencies and the current branch for each application.</li>
		<li>Under some circumstances in the Repository Application Status Dependency List view the error banner was not displayed. This has been fixed.</li> 
		<li>If an instance url is specified without trailing slash, the Studio url in the manual task for importing a new application from source control was incorrect. This has been fixed.</li>
		<li>Repository App Status lists are now sorted by "Updated On" by default.</li>
	</ol>


	<h3>1.11.0 - 2024-06-06</h3>
	<ol>
		<li>Utah is no longer actively supported.</li>
		<li>Deployer has been fully tested with Vancouver and Washington.</li>
		<li>DevTools 1.86.0 is now required because GitLabAPI and GitHubAPI can now handle repositories with more than 100 branches.</li>
		<li>A Repository Application Status can now be generated for all branches starting by "dev".</li> 
		<li>Renamed UI Action "Refresh" to "Get New Status For Same Version".</li>
		<li>The UI Action "Get New Status For Same Version" is no longer visible when the Repository Application Status is not yet finished.</li>
		<li>Renamed UI Action "New Version" to "Get Status For New Version".</li>
		<li>The UI Action "Get Status For New Version" now proposes the next minor version based on the previous version.</li>
		<li>When generating a Repository Application Status dependencies to plugins and store apps are now correctly identified as out-of-scope and displayed as such.</li> 
		<li>When generating a Repository Application Status a more precise error is reported if no corresponding repository credential could be identified.</li>
		<li>When generating a Repository Application Status a dependency without a repository url is now correctly identified as an error and the status is not ready for deployment.</li> 
		<li>Added warning about cascade deletes in case a table is about to be deleted during deployment.</li>
		<li>Added detailed instructions and a url to start with for the manual task of importing an application from source control for the first time.</li>
		<li>When updating a repository credential record, GitLab repository credentials are deactivated if no API Url has been specified.</li>
		<li>Refactoring in ExecuteDeploymentTask() to use more DevTools functions.</li>
	</ol>
	
	<h3>1.10.0 - 2024-02-29</h3>
	<ol>
		<li>DevTools 1.82.0 is now required.</li>
		<li>Deployer 1.10.0 requires the same version or higher on the target instance due to updated identification of data deletion.</li>
		<li>The detection of data deletion now considers "cloned" dictionary records on TPP tables (like tables derived from cmdb_ci).</li> 
		<li>The Deployment form no longer reloads if the "Close Notes" have been edited.</li>
		<li>The Deployment Task form now reloads when the status changes to update the UI Action buttons.</li> 
		<li>The Deployer - Repository Viewer page was not displayed properly when using Polaris dark theme. This has been fixed.</li>
		<li>The display value of a "Repository Application Status" now indicates that the date/time is in UTC.</li> 
		<li>Modified ATF test for GetLatestRepoDependencyList() to avoid test flakyness.</li>
	</ol>	
	
	<h3>1.9.1 - 2024-02-15</h3>
	<ol>
		<li>Fixed a bug related to generating the result urls in deployment tasks to navigate to test and scan results on the target instance.</li>
		<li>In the Pipeline status view page, "null" was displayed if a platform app scope is configured for a target instance, but the app is not installed on the target instance. This has been fixed.</li> 
	</ol>	
	
	<h3>1.9.0 - 2024-02-14</h3>
	<ol>
		<li>A data deletion policy can be specified for each target instance and is enforced upon deployment.</li>
		<li>Introducing the concept of Pipelines.</li>
		<li>Deployer 1.9.0 requires the same version or higher on the target instance due to the newly introduced identification of data deletion.</li>
		<li>DevTools 1.81.0 is now required because of GetAppDefaultTestSuite().</li>
		<li>A repository application status can now be established for the current state in a dev branch.</li>
		<li>Deployment Tasks to run CodeSanity checks and ATF test suites now contain a link to the results on the target instance.</li>
		<li>The checkbox "Enforce Downgrade" on the Deployment form was not read-only by default. This has been fixed.</li>
		<li>The "Prepare" button is now hidden if no instance has been selected yet for a deployment.</li>
		<li>The "Run Installation Scripts" REST API endpoint no longer requires the "async" parameter - to ensure full backward compatibility.</li>
		<li>The Deployment and the Repository Application Status forms now reload when there is a status change.</li> 
		<li>The actual start and end date and time is recorded for every deployment.</li>
		<li>The "Show Task List" UI Action on the Deployment form is now only visible in draft state.</li>
		<li>Deployments can now be cancelled while in ready state.</li>
	</ol>	
	
	<h3>1.8.0 - 2024-01-16</h3>
	<ol>
		<li>Deployer is fully tested in Vancouver.</li>
		<li>Tokyo is no longer actively supported.</li>
		<li>DevTools 1.79.0 is now required because of StringStripTrailingSlash() and DevToolsWorkerAPI::InstallApp().</li>
		<li>Deployer 1.8.0 now requires the same version or higher on the target instance due to the asynchronous execution of installation scripts.</li>
		<li>Deployer can now properly handle a repository url path with a trailing slash.</li>
		<li>The "Prepare" UI Action is no longer available for new deployments. Some options are instance specific and can only be selected once the deployment has been saved with a selected target instance.</li>
		<li>Added table x_snc_deployer_deployment_task to the link directory.</li>
		<li>When deleting a Deployment, associated Deployment Tasks are now deleted, too.</li>
		<li>Improved feature description and installation instructions in the manual.</li>
	</ol>	
	
	<h3>1.7.0 - 2023-11-17</h3>
	<ol>
		<li>Added more supported automatic deployment tasks: Installing applications from source control via switch branch/apply remote changes.</li>
		<li>Now supporting instance specific manual pre and post deployment activities.</li>
	</ol>	
	
	<h3>1.6.0 - 2023-11-10</h3>
	<ol>
		<li>Deployer now requires Deployer 1.6.0 or higher on the target instance because the technical user requires additional roles and the "Get Status" endpoint delivers additional information about the applications - including the Sys ID of the default ATF Test Suite.</li>
		<li>Deployer now requires DevTools 1.75.1 because HttpRequest() now handles exceptions thrown by RESTMessageV2::execute(). This allows for proper error handling when communicating with the target instance.</li>
		<li>Introducing deployment tasks which represent the individual steps of a deployment - supporting both manual and automated activities.</li>
		<li>Supported automatic deployment tasks: Running installation scripts, running CodeSanity checks, and executing the default ATF Test Suite.</li> 
		<li>A (manual) smoke test procedure can be specified per instance.</li>
		<li>Introduced the x_snc_deployer.developer role to allow developers to create a new Repository Application Status to check if their baselined applications are ready for deployment.</li>
		<li>The user can specify if the deployment should be automated (where possible) or be conducted manually.</li> 
		<li>A deployment cannot start while another deployment on the same target instance is in progress.</li>
		<li>Added related list of deployments to "Repo App Status" and "Target Instance" forms.</li>
		<li>Added UI action "Create Deployment" both on the "Repository Application Status" and the "Target Instance" forms.</li>
		<li>The x_snc_deployer.api role now contains the sn_cicd.sys_ci_automation role which is required to operate the sn_cicd API endpoints.</li>
		<li>The x_snc_deployer.api role now contains the admin role which - due to a platform deficiency - is required to run ATF tests remotely.</li>
	</ol>	
	
	<h3>1.5.0 - 2023-10-30</h3>
	<ol>
		<li>DevTools 1.74.0 is now required due to a bugfix in GetDependencyListFromTree().</li>
		<li>Added state model to deployments to represents the status properly.</li>
		<li>Added UI action "New Version" to create a new Repo App Status for a new version.</li>
		<li>Users with the x_snc_deployer.viewer role now have read access to the basic_auth_credentials table.</li>
		<li>Users with the x_snc_deployer.manager role now also inherit the credential_admin role and hence have write access to the discovery_credentials table.</li>
		<li>Users with the x_snc_deployer.manager role can now edit all fields on the deployment record.</li>
		<li>The related link "Show task List" now only shows after the deployment has been created.</li>
		<li>If logging.verbosity is set to "debug" HtmlRenderRepoDependencies() displays the raw data of the repository status.</li>
		<li>Improved status display in HtmlRenderRepoDependencies().</li>
		<li>Added "Credentials" menu item.</li>
		<li>The system property "x_snc_deployer.required_target_version" now defines the minimum version of the Deployer app that must be installed on the target instance.</li>
		<li>Menu items "Log" and "Test Suite" are only visible for x_snc_deployer.admin users.</li>
	</ol>	
	
	<h3>1.4.0 - 2023-09-22</h3>
	<ol>
		<li>A deployment can now be configured to either enforce downgrades - to exactly match the versions contained in the repositories - or to leave more current versions on the target instance.</li>
		<li>A deployment can now be configured to refresh application versions that are already installed on the target instance (or not).</li>
		<li>A deployment can now be configured to skip the execution of CodeSanity checks on the target instance.</li>
		<li>A deployment can now be configured to skip the execution of the default ATF Test Suites of applications on the target instance.</li>
		<li>Deployer Target API / Get Status now also returns the application status.</li>
		<li>Added function GetApplicationListFromInstance() to retrieve an array of applications and customization applications from a target instance.</li>
	</ol>	
	
	<h3>1.3.0 - 2023-09-18</h3>
	<ol>
		<li>Introduced the "Deployment" table to keep track of deployments.</li>
		<li>Added the "Show Task List" UI action to show a wiki-formatted task list for the deployment.</li>
		<li>Introduced the "Instance" table to keep configuration and credential references for target instances.</li>
		<li>The "Validate" UI action can be used to verify if an instance is properly configured and if the credentials enable the execution of API calls on the instance.</li>
		<li>Added function GetDeploymentTasks() to determine the required deployment tasks based on a given application deployment status and a target instance.</li>
		<li>GetLatestRepoDependencyTree() now contains the field "repository_application_status" which contains the Sys ID of the status record from where the information was gathered.</li>
	</ol>	
	
	<h3>1.2.0 - 2023-07-31</h3>
	<ol>
		<li>Added function GetLatestRepoDependencyStatus().</li>
		<li>Added function CleanUpPackageObject() to avoid not necessary fields in the objects returned by functions determining the application repository status.</li>  
		<li>Avoiding flakyness for ATF tests for GetLatestRepoDependencyList() and GetLatestRepoDependencyTree().</li>
		<li>Improved feature and installation documentation in manual.</li>
	</ol>
	
	
	<h3>1.1.0 - 2023-07-25</h3>
	<ol>
		<li>Deployer is now fully tested in Utah.</li>
		<li>San Diego is no longer actively supported.</li>
		<li>DevTools 1.65.0 is now required because of the contained GitLabAPI and GitHubAPI classes and the new GetDependencyListFromTree() function.</li>
		<li>Deployer now supports the analysis of the deployment readyness of an application version stored in a source code repository.</li>
		<li>The exposed functions allow pipeline automation apps to use the repository application status information as input.</li> 
		<li>Added x_snc_deployer.viewer, x_snc_deployer.manager and x_snc_deployer.admin roles.</li> 
		<li>The Deployer menu is now accessible to users with the x_snc_deployer.viewer role.</li>
		<li>Removed the menu item "Repository Viewer (ad-hoc)".</li>
		<li>Added function GetCredentialForRepository().</li>
		<li>Added function GetRepositoryType().</li>
		<li>Added function SourceControlAPI::GetRequestCount().</li>
		<li>Added function IsBranchDeployable().</li>
		<li>Added function GetLatestRepoDependencyTree().</li>
		<li>Added function GetLatestRepoDependencyList().</li>
	</ol>	
	
	<h3>1.0.0 - 2023-02-24</h3>
	<p>First baselined version</p>

<span style="visibility: hidden;">_CUT_HERE_</span>
</div>
</j:jelly>]]></html>
        <name>manual</name>
        <processing_script/>
        <sys_class_name>sys_ui_page</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-02-24 10:04:44</sys_created_on>
        <sys_id>cb800c901b1965105b76777d8b4bcb0a</sys_id>
        <sys_mod_count>176</sys_mod_count>
        <sys_name>manual</sys_name>
        <sys_package display_value="Deployer WORK IN PROGRESS" source="x_snc_deployer">394148f9db1c2d906a03dad1f396197a</sys_package>
        <sys_policy/>
        <sys_scope display_value="Deployer WORK IN PROGRESS">394148f9db1c2d906a03dad1f396197a</sys_scope>
        <sys_update_name>sys_ui_page_cb800c901b1965105b76777d8b4bcb0a</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-08-20 14:35:08</sys_updated_on>
    </sys_ui_page>
</record_update>
